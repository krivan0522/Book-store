{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useFetch = () => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    fetch('https://example-data.draftbit.com/books?_limit=240', {\n      signal: abortCont.signal\n    }).then(res => {\n      // console.log(res);\n      if (!res.ok) {\n        throw Error('could not fetch the data for that resource');\n      }\n\n      return res.json();\n    }).then(data => {\n      setData(data);\n      setIsPending(false);\n      setError(null);\n    }).catch(err => {\n      if (err.name === 'AbortError') {\n        console.log('fetch aborted');\n      } else {\n        setIsPending(false);\n        setError(err.message);\n      } // console.log(err.message);\n\n    });\n    return () => abortCont.abort();\n  }, []);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\n\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","data","setData","isPending","setIsPending","error","setError","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort"],"sources":["E:/HTML CSS/SFassign3/krish/src/useFetch.js"],"sourcesContent":["import { useState , useEffect } from \"react\";\r\n\r\nconst useFetch = () => {\r\n    const [data, setData] = useState(null);\r\n    const [isPending, setIsPending] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const abortCont = new AbortController();\r\n\r\n        \r\n            fetch('https://example-data.draftbit.com/books?_limit=240', {signal: abortCont.signal})\r\n                .then(res => {\r\n                    // console.log(res);\r\n                    if(!res.ok){\r\n                        throw Error('could not fetch the data for that resource');\r\n                    }\r\n                    return res.json();\r\n                })\r\n                .then(data => {\r\n                    setData(data);\r\n                    setIsPending(false);\r\n                    setError(null);\r\n                })\r\n                .catch(err => {\r\n                    if(err.name === 'AbortError'){\r\n                        console.log('fetch aborted');\r\n                    }\r\n                    else{\r\n                        setIsPending(false);\r\n                        setError(err.message);\r\n                    }                    \r\n                    // console.log(err.message);\r\n                })\r\n\r\n        return () => abortCont.abort();\r\n    }, []);\r\n\r\n    return { data, isPending, error };\r\n}\r\n\r\nexport default useFetch;"],"mappings":";;AAAA,SAASA,QAAT,EAAoBC,SAApB,QAAqC,OAArC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACZ,MAAMQ,SAAS,GAAG,IAAIC,eAAJ,EAAlB;IAGIC,KAAK,CAAC,oDAAD,EAAuD;MAACC,MAAM,EAAEH,SAAS,CAACG;IAAnB,CAAvD,CAAL,CACKC,IADL,CACUC,GAAG,IAAI;MACT;MACA,IAAG,CAACA,GAAG,CAACC,EAAR,EAAW;QACP,MAAMC,KAAK,CAAC,4CAAD,CAAX;MACH;;MACD,OAAOF,GAAG,CAACG,IAAJ,EAAP;IACH,CAPL,EAQKJ,IARL,CAQUV,IAAI,IAAI;MACVC,OAAO,CAACD,IAAD,CAAP;MACAG,YAAY,CAAC,KAAD,CAAZ;MACAE,QAAQ,CAAC,IAAD,CAAR;IACH,CAZL,EAaKU,KAbL,CAaWC,GAAG,IAAI;MACV,IAAGA,GAAG,CAACC,IAAJ,KAAa,YAAhB,EAA6B;QACzBC,OAAO,CAACC,GAAR,CAAY,eAAZ;MACH,CAFD,MAGI;QACAhB,YAAY,CAAC,KAAD,CAAZ;QACAE,QAAQ,CAACW,GAAG,CAACI,OAAL,CAAR;MACH,CAPS,CAQV;;IACH,CAtBL;IAwBJ,OAAO,MAAMd,SAAS,CAACe,KAAV,EAAb;EACH,CA7BQ,EA6BN,EA7BM,CAAT;EA+BA,OAAO;IAAErB,IAAF;IAAQE,SAAR;IAAmBE;EAAnB,CAAP;AACH,CArCD;;GAAML,Q;;AAuCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}